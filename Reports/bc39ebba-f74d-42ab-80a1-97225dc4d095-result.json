{"name": "test_cart_page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"checkout\"]\"}\n  (Session info: chrome=136.0.7103.114); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF620C5CF65+75717]\n\tGetHandleVerifier [0x00007FF620C5CFC0+75808]\n\t(No symbol) [0x00007FF620A28F9A]\n\t(No symbol) [0x00007FF620A7F4C6]\n\t(No symbol) [0x00007FF620A7F77C]\n\t(No symbol) [0x00007FF620AD2577]\n\t(No symbol) [0x00007FF620AA73BF]\n\t(No symbol) [0x00007FF620ACF39C]\n\t(No symbol) [0x00007FF620AA7153]\n\t(No symbol) [0x00007FF620A70421]\n\t(No symbol) [0x00007FF620A711B3]\n\tGetHandleVerifier [0x00007FF620F5D74D+3223469]\n\tGetHandleVerifier [0x00007FF620F57CF2+3200338]\n\tGetHandleVerifier [0x00007FF620F75B23+3322755]\n\tGetHandleVerifier [0x00007FF620C76A3A+180890]\n\tGetHandleVerifier [0x00007FF620C7E13F+211359]\n\tGetHandleVerifier [0x00007FF620C652B4+109332]\n\tGetHandleVerifier [0x00007FF620C65462+109762]\n\tGetHandleVerifier [0x00007FF620C4BA79+4825]\n\tBaseThreadInitThunk [0x00007FFBD9F4E8D7+23]\n\tRtlUserThreadStart [0x00007FFBDAEDC5DC+44]", "trace": "self = <tests.test_cart.TestCart object at 0x000001CD26B1E810>\n\n    def test_cart_page(self):\n        login_page=LoginPage(self.driver)\n        login_page.enter_details(\"standard_user\",\"secret_sauce\")\n        home_page=login_page.click_login_button()\n        cart_page=home_page.add_items() #here we added method from homepage\n>       cart_page.click_checkout_button()\n\ntests\\test_cart.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\Cartpage.py:16: in click_checkout_button\n    self.click_element(\"checkout_button_id\",self.checkout_button_id)\npages\\Basepage.py:31: in click_element\n    element=self.get_element(locator_name,locator_value)\npages\\Basepage.py:11: in get_element\n    element=self.driver.find_element(By.ID,locator_value)\n..\\PytestAutomation\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:898: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\PytestAutomation\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001CD26B34080>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...20C4BA79+4825]\\\\n\\\\tBaseThreadInitThunk [0x00007FFBD9F4E8D7+23]\\\\n\\\\tRtlUserThreadStart [0x00007FFBDAEDC5DC+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"checkout\"]\"}\nE         (Session info: chrome=136.0.7103.114); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF620C5CF65+75717]\nE       \tGetHandleVerifier [0x00007FF620C5CFC0+75808]\nE       \t(No symbol) [0x00007FF620A28F9A]\nE       \t(No symbol) [0x00007FF620A7F4C6]\nE       \t(No symbol) [0x00007FF620A7F77C]\nE       \t(No symbol) [0x00007FF620AD2577]\nE       \t(No symbol) [0x00007FF620AA73BF]\nE       \t(No symbol) [0x00007FF620ACF39C]\nE       \t(No symbol) [0x00007FF620AA7153]\nE       \t(No symbol) [0x00007FF620A70421]\nE       \t(No symbol) [0x00007FF620A711B3]\nE       \tGetHandleVerifier [0x00007FF620F5D74D+3223469]\nE       \tGetHandleVerifier [0x00007FF620F57CF2+3200338]\nE       \tGetHandleVerifier [0x00007FF620F75B23+3322755]\nE       \tGetHandleVerifier [0x00007FF620C76A3A+180890]\nE       \tGetHandleVerifier [0x00007FF620C7E13F+211359]\nE       \tGetHandleVerifier [0x00007FF620C652B4+109332]\nE       \tGetHandleVerifier [0x00007FF620C65462+109762]\nE       \tGetHandleVerifier [0x00007FF620C4BA79+4825]\nE       \tBaseThreadInitThunk [0x00007FFBD9F4E8D7+23]\nE       \tRtlUserThreadStart [0x00007FFBDAEDC5DC+44]\n\n..\\PytestAutomation\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "start": 1747456692463, "stop": 1747456693469, "uuid": "f5933edc-2dae-4fce-8684-df694d9531a4", "historyId": "e08db0f760ff6169ca5c35bf92564a00", "testCaseId": "e08db0f760ff6169ca5c35bf92564a00", "fullName": "tests.test_cart.TestCart#test_cart_page", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_cart"}, {"name": "subSuite", "value": "TestCart"}, {"name": "host", "value": "varun"}, {"name": "thread", "value": "20436-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_cart"}]}